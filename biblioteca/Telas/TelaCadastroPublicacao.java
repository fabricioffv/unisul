/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package biblioteca.Telas;

import biblioteca.Classes.Emprestimo;
import biblioteca.DAOs.EmprestimoDAO;
import biblioteca.Classes.Livro;
import biblioteca.DAOs.LivroDAO;
import biblioteca.Classes.Periodico;
import biblioteca.DAOs.PeriodicoDAO;
import biblioteca.Classes.Publicacao;
import biblioteca.DAOs.PublicacaoDAO;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

/**
 *
 * @author Fabricio
 */
public class TelaCadastroPublicacao extends javax.swing.JFrame {

    /**
     * Creates new form TelaCadastroPublicacao
     */
    public TelaCadastroPublicacao() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grupoTipos = new javax.swing.ButtonGroup();
        jButtonAlterar = new javax.swing.JButton();
        jButtonIncluir = new javax.swing.JButton();
        jButtonLimpar = new javax.swing.JButton();
        jButtonExcluir = new javax.swing.JButton();
        jButtonConsultar = new javax.swing.JButton();
        jLabelCodigo = new javax.swing.JLabel();
        jLabelTitulo = new javax.swing.JLabel();
        jLabelAutor = new javax.swing.JLabel();
        jTextFieldCodigo = new javax.swing.JTextField();
        jTextFieldTitulo = new javax.swing.JTextField();
        jTextFieldAutor = new javax.swing.JTextField();
        jLabelPublicacaoes = new javax.swing.JLabel();
        jLabelQuantidade = new javax.swing.JLabel();
        jTextFieldQuantidade = new javax.swing.JTextField();
        jLabelTipo = new javax.swing.JLabel();
        jRadioButtonLivro = new javax.swing.JRadioButton();
        jRadioButtonPeriodico = new javax.swing.JRadioButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableHistorico = new javax.swing.JTable();
        jLabelHistorico = new javax.swing.JLabel();
        jLabelQuantidadeDisp = new javax.swing.JLabel();
        jTextFieldQuantidadeDisp = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastro de Publicação");

        jButtonAlterar.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButtonAlterar.setText("Alterar");
        jButtonAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAlterarActionPerformed(evt);
            }
        });

        jButtonIncluir.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButtonIncluir.setText("Incluir");
        jButtonIncluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonIncluirActionPerformed(evt);
            }
        });

        jButtonLimpar.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButtonLimpar.setText("Limpar");
        jButtonLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLimparActionPerformed(evt);
            }
        });

        jButtonExcluir.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButtonExcluir.setText("Excluir");
        jButtonExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExcluirActionPerformed(evt);
            }
        });

        jButtonConsultar.setFont(new java.awt.Font("Tahoma", 1, 17)); // NOI18N
        jButtonConsultar.setText("Consultar");
        jButtonConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonConsultarActionPerformed(evt);
            }
        });

        jLabelCodigo.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabelCodigo.setText("Código:");

        jLabelTitulo.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabelTitulo.setText("Título:");

        jLabelAutor.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabelAutor.setText("Autor:");

        jLabelPublicacaoes.setBackground(java.awt.Color.white);
        jLabelPublicacaoes.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabelPublicacaoes.setText("Publicações");

        jLabelQuantidade.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabelQuantidade.setText("Quantidade:");

        jLabelTipo.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabelTipo.setText("Tipo:");

        grupoTipos.add(jRadioButtonLivro);
        jRadioButtonLivro.setText("Livro");
        jRadioButtonLivro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonLivroActionPerformed(evt);
            }
        });

        grupoTipos.add(jRadioButtonPeriodico);
        jRadioButtonPeriodico.setText("Periódico");
        jRadioButtonPeriodico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonPeriodicoActionPerformed(evt);
            }
        });

        jTableHistorico.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Código", "Nome do Usuário", "Data do Empréstimo", "Situação"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTableHistorico);
        if (jTableHistorico.getColumnModel().getColumnCount() > 0) {
            jTableHistorico.getColumnModel().getColumn(0).setResizable(false);
            jTableHistorico.getColumnModel().getColumn(1).setResizable(false);
            jTableHistorico.getColumnModel().getColumn(2).setResizable(false);
            jTableHistorico.getColumnModel().getColumn(3).setResizable(false);
        }

        jLabelHistorico.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabelHistorico.setForeground(new java.awt.Color(51, 51, 255));
        jLabelHistorico.setText("Histórico");

        jLabelQuantidadeDisp.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabelQuantidadeDisp.setText("Disponível:");

        jTextFieldQuantidadeDisp.setEditable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabelPublicacaoes)
                .addGap(214, 214, 214))
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabelTipo)
                            .addComponent(jLabelQuantidade)
                            .addComponent(jLabelCodigo)
                            .addComponent(jLabelAutor)
                            .addComponent(jLabelTitulo))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldAutor, javax.swing.GroupLayout.PREFERRED_SIZE, 454, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTextFieldQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(48, 48, 48)
                                .addComponent(jLabelQuantidadeDisp)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextFieldQuantidadeDisp, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jTextFieldTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 454, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jRadioButtonLivro)
                                .addGap(18, 18, 18)
                                .addComponent(jRadioButtonPeriodico))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonIncluir)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonConsultar, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelHistorico)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButtonAlterar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonExcluir)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButtonLimpar)))))
                .addContainerGap(64, Short.MAX_VALUE))
            .addComponent(jScrollPane2)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabelPublicacaoes)
                .addGap(53, 53, 53)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabelTipo)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jRadioButtonLivro)
                        .addComponent(jRadioButtonPeriodico)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabelCodigo)
                                            .addComponent(jTextFieldCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabelTitulo))
                                    .addComponent(jTextFieldTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabelAutor))
                            .addComponent(jTextFieldAutor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelQuantidade)
                            .addComponent(jLabelQuantidadeDisp, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jTextFieldQuantidadeDisp, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jTextFieldQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonIncluir, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonConsultar, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonLimpar, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addComponent(jLabelHistorico)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAlterarActionPerformed
        if(!TelaPrincipal.validaNumero(jTextFieldCodigo)){
            JOptionPane.showMessageDialog(null, "Campo " + jLabelCodigo.getText().replace(":", "") + 
                                          " não pode ser zero, conter letras ou estar em branco!" ,"Informação",JOptionPane.INFORMATION_MESSAGE);
            jTextFieldCodigo.grabFocus();
        }else if(jTextFieldTitulo.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Título Vazio!");
            jTextFieldTitulo.grabFocus();
        }else if(jTextFieldAutor.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Autor Vazio!");
            jTextFieldAutor.grabFocus();
        }else if(!TelaPrincipal.validaNumero(jTextFieldQuantidade)){
            JOptionPane.showMessageDialog(null, "Campo " + jLabelQuantidade.getText().replace(":", "") + 
                                          " não pode ser zero, conter letras ou estar em branco!" ,"Informação",JOptionPane.INFORMATION_MESSAGE);
            jTextFieldQuantidade.grabFocus();
        }else if((!jRadioButtonLivro.isSelected()) && (!jRadioButtonPeriodico.isSelected())) {
            JOptionPane.showMessageDialog(null, "Selecione um tipo de publicação!");
        }else{
            int codigo = Integer.parseInt(jTextFieldCodigo.getText());
            int quantidade = Integer.parseInt(jTextFieldQuantidade.getText());
            Publicacao pb = null;
            PublicacaoDAO dao = null;
           
            if(jRadioButtonLivro.isSelected()){
                dao = new LivroDAO();         
            }else{
                dao = new PeriodicoDAO();
            }
           
            try {
                pb = dao.consultar(codigo);
                pb.setTitulo(jTextFieldTitulo.getText());
                pb.setAutor(jTextFieldAutor.getText());
                pb.setQuantidade_Total(quantidade);
                
                if( pb != null){
                    if (dao.alterar(pb)) {
                        JOptionPane.showMessageDialog(null, pb.getClass().getSimpleName() + " alterado com sucesso !");
                        limparCampos();
                    } else {
                        JOptionPane.showMessageDialog(null, "Código já existe.");
                    } 
                }else{
                    JOptionPane.showMessageDialog(null, pb.getClass().getSimpleName() + " não encontrado !" );
                }
                
            } catch (SQLException ex) {
                Logger.getLogger(TelaCadastroPublicacao.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButtonAlterarActionPerformed

    private void jButtonIncluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonIncluirActionPerformed
        if(!TelaPrincipal.validaNumero(jTextFieldCodigo)){
            JOptionPane.showMessageDialog(null, "Campo " + jLabelCodigo.getText().replace(":", "") + 
                                          " não pode ser zero, conter letras ou estar em branco!" ,"Informação",JOptionPane.INFORMATION_MESSAGE);
            jTextFieldCodigo.grabFocus();
        }else if(jTextFieldTitulo.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Título Vazio!");
            jTextFieldTitulo.grabFocus();
        }else if(jTextFieldAutor.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Autor Vazio!");
            jTextFieldAutor.grabFocus();
        }else if(!TelaPrincipal.validaNumero(jTextFieldQuantidade)){
            JOptionPane.showMessageDialog(null, "Campo " + jLabelQuantidade.getText().replace(":", "") + 
                                          " não pode ser zero, conter letras ou estar em branco!" ,"Informação",JOptionPane.INFORMATION_MESSAGE);
            jTextFieldQuantidade.grabFocus();
        }else if((!jRadioButtonLivro.isSelected()) && (!jRadioButtonPeriodico.isSelected())) {
            JOptionPane.showMessageDialog(null, "Selecione um tipo de publicação!");
        }else{
            int codigo = Integer.parseInt(jTextFieldCodigo.getText());
            int quantidade = Integer.parseInt(jTextFieldQuantidade.getText());
            Publicacao pb = null;
            PublicacaoDAO dao = null;
           
            if(jRadioButtonLivro.isSelected()){
                pb = new Livro(jTextFieldTitulo.getText(), jTextFieldAutor.getText(), quantidade, quantidade, codigo);
                dao = new LivroDAO();
            }else{
                pb = new Periodico(jTextFieldTitulo.getText(), jTextFieldAutor.getText(), quantidade, quantidade, codigo);
                dao = new PeriodicoDAO();
            }
           
            try {
                if (dao.inserir(pb)) {
                    JOptionPane.showMessageDialog(null, pb.getClass().getSimpleName() + " Inserido com Sucesso!");
                    limparCampos();
                } else {
                    JOptionPane.showMessageDialog(null, "Código já existe.");
                }
            } catch (SQLException ex) {
                Logger.getLogger(TelaCadastroPublicacao.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButtonIncluirActionPerformed

    private void jButtonLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLimparActionPerformed
        limparCampos();
    }//GEN-LAST:event_jButtonLimparActionPerformed

    private void jButtonExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExcluirActionPerformed
        if (!TelaPrincipal.validaNumero(jTextFieldCodigo)) {
             JOptionPane.showMessageDialog(null, "Campo " + jTextFieldCodigo.getText().replace(":", "") + 
                                          " não pode ser zero, conter letras ou estar em branco!" ,"Informação",JOptionPane.INFORMATION_MESSAGE);
        }else{  
            int codigo = Integer.parseInt(jTextFieldCodigo.getText());
             PublicacaoDAO dao = null;
           
            if(jRadioButtonLivro.isSelected()){
                dao = new LivroDAO();         
            }else{
                dao = new PeriodicoDAO();
            }
            
            Publicacao p = null;
            try {
                p = dao.consultar(codigo);
            } catch (SQLException ex) {
                Logger.getLogger(TelaCadastroPublicacao.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            if(JOptionPane.showConfirmDialog(null, "Deseja excluir essa Publicação?", "Confirmação", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION){
                try {
                    if(dao.deletar(p.getId_publicacao())){
                        JOptionPane.showMessageDialog(null, "Publicação excluida com sucesso !"); 
                        limparCampos();
                    }else{
                        JOptionPane.showMessageDialog(null, "Problemas ao excluir"); 
                        limparCampos();
                    }
                } catch (SQLException ex) {
                    System.out.println(ex);
                }
            }
        }
    }//GEN-LAST:event_jButtonExcluirActionPerformed

    private void jButtonConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonConsultarActionPerformed
        if(!TelaPrincipal.validaNumero(jTextFieldCodigo)){
            JOptionPane.showMessageDialog(null, "Campo " + jTextFieldCodigo.getText().replace(":", "") + 
                                          " não pode ser zero, conter letras ou estar em branco!" ,"Informação",JOptionPane.INFORMATION_MESSAGE);
            jTextFieldCodigo.grabFocus();
        }else{
            int codigo = Integer.parseInt(jTextFieldCodigo.getText());
            Publicacao p = null;
            PublicacaoDAO dao = null;
            
            
            if((!jRadioButtonLivro.isSelected()) && (!jRadioButtonPeriodico.isSelected())){
                JOptionPane.showMessageDialog(null, "Selecione um tipo!");
            }else{
                if(jRadioButtonLivro.isSelected()){
                    dao = new LivroDAO();
                    try {
                        p = dao.consultar(codigo);
                    } catch (SQLException ex) {
                        Logger.getLogger(TelaCadastroPublicacao.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    if(p != null){
                        jRadioButtonLivro.setSelected(true);
                        jTextFieldCodigo.setText(Integer.toString(p.getCodigo()));
                        jTextFieldTitulo.setText(p.getTitulo());
                        jTextFieldAutor.setText(p.getAutor());
                        jTextFieldQuantidade.setText(Integer.toString(p.getQuantidade_Total()));  
                        jTextFieldQuantidadeDisp.setText(Integer.toString(p.getQuantidadeDisponivel()));
                   }else{
                         JOptionPane.showMessageDialog(null, "Livro não encontrado.");
                         limparCampos();
                     }
                }else{
                    dao = new PeriodicoDAO();
                    try {
                        p = dao.consultar(codigo);
                    } catch (SQLException ex) {
                        Logger.getLogger(TelaCadastroPublicacao.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    if(p != null){
                        jRadioButtonPeriodico.setSelected(true);
                        jTextFieldCodigo.setText(Integer.toString(p.getCodigo()));
                        jTextFieldTitulo.setText(p.getTitulo());
                        jTextFieldAutor.setText(p.getAutor());
                        jTextFieldQuantidade.setText(Integer.toString(p.getQuantidade_Total()));
                        jTextFieldQuantidadeDisp.setText(Integer.toString(p.getQuantidadeDisponivel()));
                    }else{
                        JOptionPane.showMessageDialog(null, "Periódico não encontrado.");
                        limparCampos();
                    }
                }
            } 
            
            if(p != null){
                EmprestimoDAO ed = new EmprestimoDAO();
                ArrayList<Emprestimo> lista = null;
                
                try{
                    lista = ed.consultar(p);
                    if(lista != null){
                        for(int i= 0; i < lista.size(); i++){
                            jTableHistorico.setValueAt(lista.get(i).getCodigo(), i, 0);
                            jTableHistorico.setValueAt(lista.get(i).getUsuario().getNome(), i, 1);
                            jTableHistorico.setValueAt(lista.get(i).dataToString(lista.get(i).getDataEmprestimo()), i, 2);
                            if(lista.get(i).estaDevolvido()){
                                jTableHistorico.setValueAt("Devolvido", i, 3);
                            }else{
                                jTableHistorico.setValueAt("Pendente", i, 3);
                            }
                        }
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(TelaCadastroPublicacao.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_jButtonConsultarActionPerformed

    private void jRadioButtonLivroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonLivroActionPerformed
        jLabelCodigo.setText("ISBN:");
    }//GEN-LAST:event_jRadioButtonLivroActionPerformed

    private void jRadioButtonPeriodicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonPeriodicoActionPerformed
        jLabelCodigo.setText("ISSN:");
    }//GEN-LAST:event_jRadioButtonPeriodicoActionPerformed
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaCadastroPublicacao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaCadastroPublicacao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaCadastroPublicacao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaCadastroPublicacao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaCadastroPublicacao().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup grupoTipos;
    private javax.swing.JButton jButtonAlterar;
    private javax.swing.JButton jButtonConsultar;
    private javax.swing.JButton jButtonExcluir;
    private javax.swing.JButton jButtonIncluir;
    private javax.swing.JButton jButtonLimpar;
    private javax.swing.JLabel jLabelAutor;
    private javax.swing.JLabel jLabelCodigo;
    private javax.swing.JLabel jLabelHistorico;
    private javax.swing.JLabel jLabelPublicacaoes;
    private javax.swing.JLabel jLabelQuantidade;
    private javax.swing.JLabel jLabelQuantidadeDisp;
    private javax.swing.JLabel jLabelTipo;
    private javax.swing.JLabel jLabelTitulo;
    private javax.swing.JRadioButton jRadioButtonLivro;
    private javax.swing.JRadioButton jRadioButtonPeriodico;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableHistorico;
    private javax.swing.JTextField jTextFieldAutor;
    private javax.swing.JTextField jTextFieldCodigo;
    private javax.swing.JTextField jTextFieldQuantidade;
    private javax.swing.JTextField jTextFieldQuantidadeDisp;
    private javax.swing.JTextField jTextFieldTitulo;
    // End of variables declaration//GEN-END:variables

    private void limparCampos() {
        grupoTipos.clearSelection();
        jRadioButtonLivro.setSelected(false);
        jRadioButtonPeriodico.setSelected(false);
        jTextFieldCodigo.setText("");
        jTextFieldTitulo.setText("");
        jTextFieldAutor.setText("");
        jTextFieldQuantidade.setText("");
        jTextFieldQuantidadeDisp.setText("");
        jTableHistorico.clearSelection();
        
        for(int i= 0; i < jTableHistorico.getRowCount(); i++){
            jTableHistorico.setValueAt("", i, 0);
            jTableHistorico.setValueAt("", i, 1);
            jTableHistorico.setValueAt("", i, 2);
            jTableHistorico.setValueAt("", i, 3);
            
        }
    }
}
